name: Docker-Publish-Frontend

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: frontend

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - run: npm install
        working-directory: "Application/Frontend/buzzword-stack-frontend"
      - run: npm run test:unit
        working-directory: "Application/Frontend/buzzword-stack-frontend"
      - run: npm run build
        working-directory: "Application/Frontend/buzzword-stack-frontend"
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME
        working-directory: "Application/Frontend/"
      - name: Store docker creds
        run: echo $DOCKER_CONFIG > ~/.docker/config.json
        env:
          DOCKER_CONFIG: ${{secrets.DOCKER_CONFIG}}
      - name: Login to registry
        run: docker login registry.digitalocean.com/buzzword-stack-container-registry

#       - name: Log into registry
#         run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=registry.digitalocean.com/buzzword-stack-container-registry/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
